name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15

    - name: Check out Code
      uses: actions/checkout@v2

    - name: Build
      run: go build -v ./...

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15

    - name: Check out Code
      uses: actions/checkout@v2

    - name: Check Formatting
      uses: Jerome1337/gofmt-action@v1.0.4
      with:
        gofmt-flags: '-l -d'

    - name: Test
      run: go test -v ./...

  docker:
    name: Docker
    runs-on: ubuntu-latest
    steps:

    - name: Check out Code
      uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build HTTP
      if: github.ref != 'refs/heads/main'
      uses: docker/build-push-action@v2.2.1
      with:
        file: ./cmd/http/Dockerfile
        tags: "microhod/randflix-api:dev"

    - name: Build and Publish HTTP
      # only publish image on main
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v2.2.1
      with:
        file: ./cmd/http/Dockerfile
        tags: "microhod/randflix-api:latest"
        push: true

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Lambda
      if: github.ref != 'refs/heads/main'
      uses: docker/build-push-action@v2.2.1
      with:
        file: ./cmd/lambda/Dockerfile
        tags: "${{ steps.login-ecr.outputs.registry }}/random-api:dev"

    - name: Build and Publish Lambda
      # only publish image on main
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v2.2.1
      with:
        file: ./cmd/http/Dockerfile
        tags: "${{ steps.login-ecr.outputs.registry }}/random-api:latest"
        push: true
